// Code generated by goctl. DO NOT EDIT.
// Source: users.proto

package user

import (
	"context"

	"user/pb/users"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserReq       = users.AddUserReq
	AddUserResp      = users.AddUserResp
	DelUserReq       = users.DelUserReq
	DelUserResp      = users.DelUserResp
	GetUserByCodeReq = users.GetUserByCodeReq
	GetUserByIdReq   = users.GetUserByIdReq
	GetUserByIdResp  = users.GetUserByIdResp
	InviteUserReq    = users.InviteUserReq
	SearchUserReq    = users.SearchUserReq
	SearchUserResp   = users.SearchUserResp
	UpdateUserReq    = users.UpdateUserReq
	UpdateUserResp   = users.UpdateUserResp
	User             = users.User

	UserZrpcClient interface {
		// -----------------------user-----------------------
		AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		TranAddUser(ctx context.Context, in *InviteUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		TranDelUser(ctx context.Context, in *InviteUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error)
		DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error)
		GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		GetUserByCode(ctx context.Context, in *GetUserByCodeReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error)
	}

	defaultUserZrpcClient struct {
		cli zrpc.Client
	}
)

func NewUserZrpcClient(cli zrpc.Client) UserZrpcClient {
	return &defaultUserZrpcClient{
		cli: cli,
	}
}

// -----------------------user-----------------------
func (m *defaultUserZrpcClient) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

func (m *defaultUserZrpcClient) TranAddUser(ctx context.Context, in *InviteUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.TranAddUser(ctx, in, opts...)
}

func (m *defaultUserZrpcClient) TranDelUser(ctx context.Context, in *InviteUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.TranDelUser(ctx, in, opts...)
}

func (m *defaultUserZrpcClient) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUserZrpcClient) DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.DelUser(ctx, in, opts...)
}

func (m *defaultUserZrpcClient) GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

func (m *defaultUserZrpcClient) GetUserByCode(ctx context.Context, in *GetUserByCodeReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.GetUserByCode(ctx, in, opts...)
}

func (m *defaultUserZrpcClient) SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error) {
	client := users.NewUserClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}
